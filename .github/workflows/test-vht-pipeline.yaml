name: CICD Pipeline for Innoway Devportal FE - VHT - Test Cluster

on:
  push:    
    branches:
      - main
    
env:
  image: ui
  tags: ${{ github.sha }}
  chart-folder: /home/vht/ui
  chart-name: ui
  namespace: ui
  repo-infra-user: minhhk1
  repo-infra-name: gitlabvht.innoway.vn/minhhk1/viot-app-chart.git
  repo-infra-branch: main
  repo-folder: viot-app-chart

jobs:
  # Job 1: build && test
  build:
    name: Build and push image
    runs-on: worker-mongo
    if: github.actor == 'hkm15022001' || github.actor == 'nguyenleccss361'
    steps:
      # Checkout code
    - uses: actions/checkout@v4
      # Build image
    - name: Build Image
      id: build-image
      run: |
        output=$(docker pull ${{secrets.REGISTRY_HOST}}/${{env.image}}:latest 2>&1|| true)

        if [[ "$output" == *"not found"* ]]; then
          echo " Latest image not found !! "
          docker build -t ${{env.image}}:${{env.tags}} .
        else 
          echo "Tag: ${{env.tags}}"
          cp .env.test.example .env
          docker build --cache-from ${{secrets.REGISTRY_HOST}}/${{env.image}}:latest -t ${{env.image}}:${{env.tags}} .
        fi
        
  # Podman Login action (https://github.com/redhat-actions/podman-login) also be used to log in,
  # in which case 'username' and 'password' can be omitted.
    - name: Push To harbor
      id: push-to-harbor
      env:
        registry: ${{ secrets.REGISTRY_HOST }}
      run: |
        docker tag ${{env.image}}:${{env.tags}} ${{secrets.REGISTRY_HOST}}/${{env.image}}:${{env.tags}}
        docker push ${{secrets.REGISTRY_HOST}}/${{env.image}}:${{env.tags}}
        docker tag ${{secrets.REGISTRY_HOST}}/${{env.image}}:${{env.tags}} ${{secrets.REGISTRY_HOST}}/${{env.image}}:latest
        docker push ${{secrets.REGISTRY_HOST}}/${{env.image}}:latest
    - name: Clean image after push
      run: |
        docker image ls | grep  ${{env.image}} | awk {'print $3 '} | xargs -I delete-images docker rmi delete-images || true
        docker rmi $(docker images -f "dangling=true" -q) || true

  # Job2: Edit image tag in gitlab repo
  update-config:
      runs-on: worker-mongo
      needs: build
      steps:
      - name: Checkout code
        run: git clone https://${{env.repo-infra-user}}:${{secrets.GITLAB_TOKEN}}@${{env.repo-infra-name}}
      - name: edit image tag
        run: |
          cd ${{env.repo-folder}}/${{env.chart-name}}
          sed -i "s/tag: .*/tag: ${{ env.tags }}/g" values-dev.yaml
          git config user.email "minhhk1@viettel.com.vn"
          git config user.name "minhhk1"
          git add .
          git commit -m "edit tag name by cicd"
          git push origin main
  # # Job3: ssh to master node and run helm upgrade
  # deploy:
  #   name: Deploy to kubernetes
  #   needs: build
  #   runs-on: worker-mongo
  #   steps:
  #   - name: SSH and deploy
  #     uses: appleboy/ssh-action@master
  #     with:
  #       host: ${{ secrets.SERVER_HOST_TEST }}
  #       username: ${{ secrets.SERVER_USER_TEST }}
  #       password: ${{ secrets.SERVER_PASSWORD_TEST }}
  #       port: ${{ secrets.SERVER_PORT_TEST }}
  #       timeout: 500s
  #       script: |
  #         cd ${{env.chart-folder}}
  #         sed -i "s/tag: .*/tag: ${{env.tags}}/g" values.yaml
  #         helm upgrade ${{env.chart-name}} -f values.yaml . -n ${{env.namespace}}


